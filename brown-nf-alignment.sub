# brown-nf-alignment.sub
# Job submission to HTCondor to initialize Nextflow and align via nf-core/scrnaseq
#
# Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs) and your desired name of the HTCondor log file,
#  which is where HTCondor will describe what steps it takes to run 
#  your job. Wherever you see $(Cluster), HTCondor will insert the 
#  queue number assigned to this set of jobs at the time of submission.
universe = vanilla
log = brown-nf-alignment_$(Cluster).log
requirements = (Target.HasCHTCStaging == True)
notification = Always
notify_user = wblashka@wisc.edu
#
# Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
#
executable = brown-nf-alignment.sh
output = brown-nf-alignment_$(Cluster).out
error = brown-nf-alignment_$(Cluster).err
#
# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. The last of these lines *would* be
#  used if there were any other files needed for the executable to use.
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
#
transfer_input_files = amazon-corretto-17-x64-linux-jdk.tar.gz, file:///staging/groups/surgery_brown_group/fetchngs_CMs.tar.gz, samplesheet.csv, params.json, nextflow.config
transfer_output_files = nf_output.tar.gz, .nextflow.log
transfer_output_remaps = "nf_output.tar.gz = file:///staging/groups/surgery_brown_group/scrnaseq_$(Cluster).tar.gz"
#
# Tell HTCondor what amount of compute resources
#  each job will need on the computer where it runs.
request_cpus = 2
request_memory = 72GB
request_disk = 512GB
#
# Tell HTCondor to run our job:
queue
